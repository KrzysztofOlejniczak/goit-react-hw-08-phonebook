{"version":3,"file":"static/js/498.c9faf14a.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/EditForm/EditForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { Box, IconButton, InputAdornment, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useDispatch } from 'react-redux';\nimport { fetchFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    const form = e.currentTarget;\n    const filterValue = form.elements.filter.value;\n    dispatch(fetchFilter(filterValue));\n  };\n  return (\n    <Box component=\"form\" onChange={handleFilter} noValidate>\n      <TextField\n        size=\"small\"\n        margin=\"normal\"\n        id=\"filter\"\n        label=\"Search\"\n        name=\"filter\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton>\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport {\n  Avatar,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { openModal } from 'redux/contacts/modalSlice';\n\nexport const ContactList = ({ filter, contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleEdit = id => {\n    dispatch(openModal(id));\n  };\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n    return color;\n  }\n\n  function stringAvatar(name) {\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name[0].toUpperCase()}`,\n    };\n  }\n\n  const filteredContacts = contacts.filter(el => {\n    return el.name.toLowerCase().includes(filter.toLowerCase());\n  });\n  return (\n    <>\n      {!filteredContacts.length ? (\n        <Typography align=\"center\" sx={{ mt: 2 }}>\n          No contact found.\n        </Typography>\n      ) : (\n        <List>\n          {filteredContacts.map(el => (\n            <ListItem\n              key={el.id}\n              secondaryAction={\n                <>\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"edit\"\n                    onClick={() => {\n                      handleEdit(el.id);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      handleDelete(el.id);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar {...stringAvatar(el.name)} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={el.name}\n                secondary={\n                  <Link\n                    href={`tel:${el.number}`}\n                    sx={{ textDecoration: 'none' }}\n                  >\n                    {el.number}\n                  </Link>\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { Box, Button, TextField } from '@mui/material';\nimport { debounce } from 'lodash';\nimport { useCallback, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [errorName, setErrorName] = useState('');\n  const [errorPhone, setErrorPhone] = useState('');\n\n  const validateInputName = input => {\n    const nameRegex =\n      /^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+(([' -][a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ])?[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]*)*$/;\n    if (!nameRegex.test(input)) {\n      return 'Name may contain only letters, apostrophe, dash and spaces.';\n    }\n    return undefined;\n  };\n\n  const handleInputChangeName = event => {\n    const inputValue = event.target.value;\n    setErrorName(validateInputName(inputValue));\n  };\n  // eslint-disable-next-line\n  const debouncedHandleInputChangeName = useCallback(\n    debounce(e => handleInputChangeName(e), 200),\n    []\n  );\n\n  const validateInputPhone = input => {\n    const phoneRegex =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n    if (!phoneRegex.test(input)) {\n      return 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n    }\n    return undefined;\n  };\n\n  const handleInputChangePhone = event => {\n    const inputValue = event.target.value;\n    setErrorPhone(validateInputPhone(inputValue));\n  };\n  // eslint-disable-next-line\n  const debouncedHandleInputChangePhone = useCallback(\n    debounce(e => handleInputChangePhone(e), 200),\n    []\n  );\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().replace(/\\s/g, '') ===\n          name.toLowerCase().replace(/\\s/g, '')\n      )\n    ) {\n      toast(`${name} is already in contacts!`, {\n        icon: '⚠️',\n      });\n      return;\n    }\n\n    if (\n      contacts.find(\n        contact =>\n          contact.number.replace(/\\s/g, '') === number.replace(/\\s/g, '')\n      )\n    ) {\n      const index = contacts.findIndex(\n        contact =>\n          contact.number.replace(/\\s/g, '') === number.replace(/\\s/g, '')\n      );\n      toast(`${number} is already in contacts! (${contacts[index].name})`, {\n        icon: '⚠️',\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      display={'flex'}\n      flexDirection={'column'}\n    >\n      <TextField\n        required\n        margin=\"normal\"\n        id=\"name\"\n        label=\"Name\"\n        name=\"name\"\n        type=\"text\"\n        error={!!errorName}\n        helperText={errorName}\n        onChange={debouncedHandleInputChangeName}\n      />\n      <TextField\n        required\n        margin=\"normal\"\n        id=\"phone\"\n        label=\"Phone number\"\n        name=\"number\"\n        type=\"tel\"\n        error={!!errorPhone}\n        helperText={errorPhone}\n        onChange={debouncedHandleInputChangePhone}\n      />\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        sx={{ mt: 2 }}\n        disabled={!!errorName || !!errorPhone}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import { Box, Button, TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const EditForm = ({ id = null }) => {\n  const [errorName, setErrorName] = useState('');\n  const [errorPhone, setErrorPhone] = useState('');\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const validateInputName = input => {\n    const nameRegex =\n      /^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+(([' -][a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ])?[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]*)*$/;\n    if (!nameRegex.test(input)) {\n      return 'Name may contain only letters, apostrophe, dash and spaces.';\n    }\n    return undefined;\n  };\n\n  const handleInputChangeName = event => {\n    const inputValue = event.target.value;\n    setName(inputValue);\n    setErrorName(validateInputName(inputValue));\n  };\n\n  const validateInputPhone = input => {\n    const phoneRegex =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n    if (!phoneRegex.test(input)) {\n      return 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n    }\n\n    return undefined;\n  };\n\n  const handleInputChangePhone = event => {\n    const inputValue = event.target.value;\n    setPhone(inputValue);\n    setErrorPhone(validateInputPhone(inputValue));\n  };\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().replace(/\\s/g, '') ===\n          name.toLowerCase().replace(/\\s/g, '')\n      )\n    ) {\n      const index = contacts.findIndex(\n        contact => contact.name.replace(/\\s/g, '') === name.replace(/\\s/g, '')\n      );\n      if (index !== indexFromId) {\n        toast(`${name} is already in contacts!`, {\n          icon: '⚠️',\n        });\n        return;\n      }\n    }\n\n    if (\n      contacts.find(\n        contact =>\n          contact.number.replace(/\\s/g, '') === number.replace(/\\s/g, '')\n      )\n    ) {\n      const index = contacts.findIndex(\n        contact =>\n          contact.number.replace(/\\s/g, '') === number.replace(/\\s/g, '')\n      );\n      if (index !== indexFromId) {\n        toast(`${number} is already in contacts! (${contacts[index].name})`, {\n          icon: '⚠️',\n        });\n        return;\n      }\n    }\n    dispatch(updateContact({ contactId: id, name, number }));\n    form.reset();\n  };\n\n  const idContact = contacts.find(el => el.id === id);\n  const indexFromId = contacts.findIndex(contact => contact.id === id);\n\n  useEffect(() => {\n    setName(idContact.name);\n    setPhone(idContact.number);\n  }, [idContact]);\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      display={'flex'}\n      flexDirection={'column'}\n    >\n      <TextField\n        value={name}\n        required\n        margin=\"normal\"\n        id=\"name\"\n        label=\"Name\"\n        name=\"name\"\n        type=\"text\"\n        error={!!errorName}\n        helperText={errorName}\n        onChange={handleInputChangeName}\n      />\n      <TextField\n        value={phone}\n        required\n        margin=\"normal\"\n        id=\"phone\"\n        label=\"Phone number\"\n        name=\"number\"\n        type=\"tel\"\n        error={!!errorPhone}\n        helperText={errorPhone}\n        onChange={handleInputChangePhone}\n      />\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        sx={{ mt: 2 }}\n        disabled={!!errorName || !!errorPhone}\n      >\n        Edit contact\n      </Button>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n  selectModalId,\n  selectModalOpen,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { Box, Modal } from '@mui/material';\nimport { closeModal } from 'redux/contacts/modalSlice';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Helmet } from 'react-helmet-async';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const modalOpen = useSelector(selectModalOpen);\n  const modalId = useSelector(selectModalId);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(closeModal());\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>PhoneBook Contacts</title>\n      </Helmet>\n      <Filter />\n      <ContactList contacts={contacts} filter={filter} />\n      <Modal\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          {!!modalId ? <EditForm id={modalId} /> : <ContactForm />}\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Filter","dispatch","useDispatch","Box","component","onChange","e","filterValue","currentTarget","elements","filter","value","fetchFilter","noValidate","TextField","size","margin","id","label","name","InputProps","endAdornment","InputAdornment","position","IconButton","Search","ContactList","contacts","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","filteredContacts","el","toLowerCase","includes","List","map","ListItem","secondaryAction","edge","onClick","openModal","sx","mr","Edit","deleteContact","Delete","ListItemAvatar","Avatar","bgcolor","children","toUpperCase","ListItemText","primary","secondary","Link","href","number","textDecoration","Typography","align","mt","ContactForm","useState","errorName","setErrorName","errorPhone","setErrorPhone","debouncedHandleInputChangeName","useCallback","debounce","event","inputValue","target","input","test","validateInputName","handleInputChangeName","debouncedHandleInputChangePhone","validateInputPhone","handleInputChangePhone","useSelector","selectContacts","onSubmit","preventDefault","form","trim","find","contact","replace","toast","icon","index","findIndex","addContact","reset","display","flexDirection","required","type","error","helperText","Button","variant","disabled","EditForm","setName","phone","setPhone","idContact","indexFromId","useEffect","updateContact","contactId","style","top","left","transform","width","boxShadow","p","selectFilter","modalOpen","selectModalOpen","modalId","selectModalId","fetchContacts","Modal","open","onClose","closeModal"],"sourceRoot":""}